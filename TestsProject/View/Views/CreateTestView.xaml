<UserControl x:Class="View.Views.CreateTestView"
 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:View"
        mc:Ignorable="d">
    
    <Grid DockPanel.Dock ="Left" Background ="AliceBlue" RenderTransformOrigin="0.356,0.483">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="Auto" MinHeight="720"/>
            </Grid.RowDefinitions>

            <Grid Grid.Column="0" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center">
                    Questions
                </Label>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="37*"/>
                        <RowDefinition Height="33*"/>
                    </Grid.RowDefinitions>

                    <Button Grid.Row="0" Margin="0,6,10,3"  Command="{Binding AddOpenQuestion}">
                        <TextBlock FontSize="11" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center">Add open question</TextBlock>
                    </Button>
                    <Button Grid.Row="1" Margin="0,6,10,6" Content="Add question"  Command="{Binding AddQuestion}"/>

                </Grid>
            </Grid>

            <StackPanel Grid.Column="0" Grid.Row="1">
                <ListBox  ItemsSource="{Binding Questions}" SelectedItem="{Binding SelectedQuestion}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <WrapPanel>
                                <TextBlock Text="Question number"/>
                            </WrapPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </Grid>

        <Border Grid.Column="0" BorderBrush="#FF6581FD"
        BorderThickness="4 0 4 0" Grid.RowSpan="2">
        </Border>

        <Grid x:Name="TestResult" Grid.Column="1" Visibility="Hidden" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="7*"></ColumnDefinition>
                    <ColumnDefinition Width="83*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Results"></Label>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20*"></ColumnDefinition>
                    <ColumnDefinition Width="83*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Right answers: "></Label>
                <Label x:Name="TestTheme" Grid.Column="1" Content="0 / 0"></Label>
            </Grid>
        </Grid>

        <Grid x:Name="TestContent" Grid.Column="1" Visibility="Visible" Grid.RowSpan="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition />
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Margin="10,0,0,0" Content="Test name: " ></Label>
                    <Label Grid.Column="1" Margin="10,0,0,0" Content="Test theme: " ></Label>
                    <TextBox Text="{Binding Test.TestName}" Grid.Column="1" Margin="87,3,134,-3"/>
                    <TextBox Text="{Binding Test.TestName}" Margin="88,0,134,0"/>
                </Grid>

                <Grid Grid.Row="1" Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"></ColumnDefinition>
                        <ColumnDefinition Width="40"></ColumnDefinition>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="40"></ColumnDefinition>
                        <ColumnDefinition Width="350"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Margin="10,0,0,0" Content="Timer minutes: " />
                    <TextBox x:Name="Minutes" Grid.Column="1" Text="{Binding Test.TimerMinute}">
                       
                    </TextBox>
                    <Label Grid.Column="2" Margin="10,0,0,0" Content="Timer seconds: " ></Label>
                    <TextBox x:Name="Seconds" Grid.Column="3" Text="{Binding Test.TimerSecond}"/>

                    <Grid Grid.Column="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Margin="10,0,0,0" Content="Show the correct answer:" ></Label>
                        <Grid  Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <RadioButton Grid.Row="0" GroupName="TestEnd" IsChecked="{Binding Test.ShowAnswerAtEnd}" Content="at the end"/>
                            <RadioButton Grid.Row="1" GroupName="TestEnd" IsChecked="{Binding Test.ShowAnswerAtEnd, Converter={StaticResource BoolInverter}}" Content="immediately" />
                        </Grid>
                        

                    </Grid>

    
                </Grid>

                <Grid Grid.Row="2" Margin="0,0,0,4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="119*"/>
                        <ColumnDefinition Width="921*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="QuestionContent" Margin="28,104,135,0" Text="{Binding SelectedQuestion.QuestionContent}" Grid.ColumnSpan="2"/>
                    <Button Content="Save test" HorizontalAlignment="Left" Margin="833,-14,0,0" VerticalAlignment="Top" Height="37" Width="88" Command="{Binding SaveTest}" Grid.Column="1">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Minutes}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Seconds}" Value="False"/>
                                        </MultiDataTrigger.Conditions> 
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>

                <Grid Grid.Row="3">
                    <Button Content="Remove current question" HorizontalAlignment="Left" Margin="50 10 0 10 " Width="200" Command="{Binding RemoveQuestion}"/>
                </Grid>

                <Grid Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="93*"/>
                        <ColumnDefinition Width="122*"/>
                        <ColumnDefinition Width="134*"/>
                        <ColumnDefinition Width="316*"/>
                        <ColumnDefinition Width="390*"/>
                    </Grid.ColumnDefinitions>
                    <Label Name="AnswersLabel" FontSize="14" Margin="10,10,0,0" Grid.ColumnSpan="5">
                        Answers
                    </Label>
                    <Button Grid.Column="1" Margin="10,15,0,0"  HorizontalAlignment="Left" VerticalAlignment="Top" Content="Add" Command="{Binding AddAnswer}" Width="90" Height="20">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedQuestion.IsOpen}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AddAnswerButtonVisibility}"  Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AddAnswerButtonVisibility}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedQuestion.IsOpen}"  Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>

                <Grid Grid.Row="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="97*"></ColumnDefinition>
                        <ColumnDefinition Width="58*"/>
                        <ColumnDefinition Width="925*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label FontSize="14" Margin="10,10,0,0" Grid.Column="0" Grid.ColumnSpan="2">
                        Is it right answer
                        <Label.Style>
                            <Style TargetType="Label">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedQuestion.IsOpen}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedQuestion.IsOpen}"  Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Label FontSize="14" Margin="30,10,0,0" Grid.Column="2">
                        Answer content
                    </Label>
                </Grid>

                <Grid Grid.Row="6">
                    <StackPanel  Margin="0,0,6,0" >
                        <ItemsControl ItemsSource="{Binding SelectedQuestion.Answers}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <CheckBox IsChecked="{Binding Path = IsRight}"  Margin="50,0,0,0">
                                            <CheckBox.Style>
                                                <Style TargetType="CheckBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DataContext.SelectedQuestion.IsOpen, RelativeSource={RelativeSource Mode=FindAncestor,
                                                               AncestorType={x:Type ItemsControl}}}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DataContext.SelectedQuestion.IsOpen, RelativeSource={RelativeSource Mode=FindAncestor,
                                                               AncestorType={x:Type ItemsControl}}}"  Value="False">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>
                                        <TextBox Text="{Binding Path = AnswerContent}" Width="500" Margin="120,0,0,0"/>
                                        <Button Content="Remove that answer" Command="{Binding DataContext.RemoveAnswer, RelativeSource={RelativeSource Mode=FindAncestor,
                                                               AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DataContext.SelectedQuestion.IsOpen, RelativeSource={RelativeSource Mode=FindAncestor,
                                                               AncestorType={x:Type ItemsControl}}}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DataContext.SelectedQuestion.IsOpen, RelativeSource={RelativeSource Mode=FindAncestor,
                                                               AncestorType={x:Type ItemsControl}}}"  Value="False">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </WrapPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
